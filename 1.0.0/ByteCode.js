"use strict";const fs=require("fs"),vm=require("vm"),v8=require("v8"),path=require("path"),{fork:fork}=require("child_process"),Module=require("module");v8.setFlagsFromString("--no-lazy"),Number.parseInt(process.versions.node.split(".")[0],10)>=12&&v8.setFlagsFromString("--no-flush-bytecode");const COMPILED_EXTNAME=".jsc",compileCode=function(e){if("string"!=typeof e)throw new Error(`javascriptCode must be string. ${typeof e} was given.`);let r=new vm.Script(e,{produceCachedData:!0});return r.createCachedData&&r.createCachedData.call?r.createCachedData():r.cachedData},compileElectronCode=function(e){return new Promise((r,o)=>{let t=Buffer.from([]);const n=path.join("node_modules","electron","cli.js"),i=path.join(__dirname,"cli.js"),s=fork(n,[i,"--compile","--no-module","-"],{env:{ELECTRON_RUN_AS_NODE:"1"},stdio:["pipe","pipe","pipe","ipc"]});s.stdin.write(e),s.stdin.end(),s.stdout.on("data",e=>{t=Buffer.concat([t,e])}),s.stdout.on("error",e=>{console.error(e)}),s.stdout.on("end",()=>{r(t)}),s.stderr.on("data",e=>{console.error("Error: ",e)}),s.stderr.on("error",e=>{console.error("Error: ",e)}),s.addListener("message",e=>console.log(e)),s.addListener("error",e=>console.error(e)),s.on("error",e=>o(e)),s.on("exit",()=>{r(t)})})},fixBytecode=function(e){if(!Buffer.isBuffer(e))throw new Error("bytecodeBuffer must be a buffer object.");let r=compileCode('"ಠ_ಠ"');process.version.startsWith("v8.8")||process.version.startsWith("v8.9")?(r.slice(16,20).copy(e,16),r.slice(20,24).copy(e,20)):process.version.startsWith("v12")||process.version.startsWith("v13")||process.version.startsWith("v14")||process.version.startsWith("v15")?r.slice(12,16).copy(e,12):(r.slice(12,16).copy(e,12),r.slice(16,20).copy(e,16))},readSourceHash=function(e){if(!Buffer.isBuffer(e))throw new Error("bytecodeBuffer must be a buffer object.");return process.version.startsWith("v8.8")||process.version.startsWith("v8.9")?e.slice(12,16).reduce((e,r,o)=>e+=r*Math.pow(256,o),0):e.slice(8,12).reduce((e,r,o)=>e+=r*Math.pow(256,o),0)},runBytecode=function(e){if(!Buffer.isBuffer(e))throw new Error("bytecodeBuffer must be a buffer object.");fixBytecode(e);let r=readSourceHash(e),o="";r>1&&(o='"'+"​".repeat(r-2)+'"');let t=new vm.Script(o,{cachedData:e});if(t.cachedDataRejected)throw new Error("Invalid or incompatible cached data (cachedDataRejected)");return t.runInThisContext()},compileFile=async function(e,r){let o,t,n,i,s;if("string"==typeof e?(o=e,t=!0,n=!1,i=!1):"object"==typeof e&&(o=e.filename,t=!1!==e.compileAsModule,n=e.electron,i=!0,(s=e.loaderFilename)&&(i=!0)),"string"!=typeof o)throw new Error(`filename must be a string. ${typeof o} was given.`);let c=e.output||r||o.slice(0,-3)+".jsc";if("string"!=typeof c)throw new Error(`output must be a string. ${typeof c} was given.`);let a,l,d=fs.readFileSync(o,"utf-8");return a=t?Module.wrap(d.replace(/^#!.*/,"")):d.replace(/^#!.*/,""),l=n?await compileElectronCode(a):compileCode(a),fs.writeFileSync(c,l),i&&addLoaderFile(c,s),c},runBytecodeFile=function(e){if("string"!=typeof e)throw new Error(`filename must be a string. ${typeof e} was given.`);let r=fs.readFileSync(e);return runBytecode(r)};function addLoaderFile(e,r){let o;"boolean"==typeof r||void 0===r||""===r?o=e.replace(".jsc",".loader.js"):(r=r.replace("%",path.parse(e).name),o=path.join(path.dirname(e),r));const t=loaderCode(path.relative(path.dirname(o),e));fs.writeFileSync(o,t)}function loaderCode(e){return`\n    let _core = require('./ByteCode.js') && require('./${e}');\n  `}Module._extensions[".jsc"]=function(e,r){let o=fs.readFileSync(r);fixBytecode(o);let t=readSourceHash(o),n="";t>1&&(n='"'+"​".repeat(t-2)+'"');let i=new vm.Script(n,{filename:r,lineOffset:0,displayErrors:!0,cachedData:o});if(i.cachedDataRejected)throw new Error("Invalid or incompatible cached data (cachedDataRejected)");function s(r){return e.require(r)}s.resolve=function(r,o){return Module._resolveFilename(r,e,!1,o)},s.main=process.mainModule,s.extensions=Module._extensions,s.cache=Module._cache;let c=i.runInThisContext({filename:r,lineOffset:0,columnOffset:0,displayErrors:!0}),a=path.dirname(r),l=[e.exports,s,e,r,a,process,global];return c.apply(e.exports,l)},global.bytenode={compileCode:compileCode,compileFile:compileFile,compileElectronCode:compileElectronCode,runBytecode:runBytecode,runBytecodeFile:runBytecodeFile,addLoaderFile:addLoaderFile,loaderCode:loaderCode},module.exports=global.bytenode;